{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singh\\\\OneDrive\\\\Desktop\\\\ChatBot_Flow\\\\src\\\\components\\\\FlowBuilder.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useRef, useState, useEffect } from 'react';\nimport ReactFlow, { useNodesState, useEdgesState, addEdge, applyNodeChanges, applyEdgeChanges, Background, Controls, MiniMap } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport TextNode from './TextNode';\nimport './FlowBuilder.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  textMessage: TextNode\n};\nconst FlowBuilder = ({\n  nodes: initialNodes,\n  setNodes,\n  edges: initialEdges,\n  setEdges,\n  onNodeClick\n}) => {\n  _s();\n  const reactFlowWrapper = useRef(null);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n\n  // Internal state using React Flow hooks\n  const [nodes, internalSetNodes, onNodesChange] = useNodesState(initialNodes || []);\n  const [edges, internalSetEdges, onEdgesChange] = useEdgesState(initialEdges || []);\n\n  // Sync internal state with parent\n  useEffect(() => {\n    setNodes(nodes);\n    setEdges(edges);\n  }, [nodes, edges, setNodes, setEdges]);\n\n  // Handle node connection\n  const onConnect = useCallback(params => internalSetEdges(eds => addEdge(params, eds)), [internalSetEdges]);\n\n  // Drag over behavior\n  const onDragOver = useCallback(event => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n\n  // Handle node drop\n  const onDrop = useCallback(event => {\n    event.preventDefault();\n    if (!reactFlowWrapper.current || !reactFlowInstance) return;\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const type = event.dataTransfer.getData('application/reactflow');\n    if (!type) return;\n    const position = reactFlowInstance.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top\n    });\n    const newNode = {\n      id: `${type}-${Date.now()}`,\n      type,\n      position,\n      data: {\n        text: 'New text message'\n      }\n    };\n    internalSetNodes(nds => nds.concat(newNode));\n  }, [reactFlowInstance, internalSetNodes]);\n\n  // Handle node click\n  const handleNodeClick = useCallback((event, node) => {\n    if (onNodeClick && node !== null && node !== void 0 && node.id) onNodeClick(node.id);\n  }, [onNodeClick]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flow-builder\",\n    ref: reactFlowWrapper,\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onConnect: onConnect,\n      onInit: setReactFlowInstance,\n      onDrop: onDrop,\n      onDragOver: onDragOver,\n      onNodeClick: handleNodeClick,\n      nodeTypes: nodeTypes,\n      fitView: true,\n      attributionPosition: \"top-right\",\n      children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Background, {\n        variant: \"dots\",\n        gap: 12,\n        size: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(FlowBuilder, \"ILAOSfcz7qgDg03vkdGNF8++URo=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = FlowBuilder;\nexport default FlowBuilder;\nvar _c;\n$RefreshReg$(_c, \"FlowBuilder\");","map":{"version":3,"names":["React","useCallback","useRef","useState","useEffect","ReactFlow","useNodesState","useEdgesState","addEdge","applyNodeChanges","applyEdgeChanges","Background","Controls","MiniMap","TextNode","jsxDEV","_jsxDEV","nodeTypes","textMessage","FlowBuilder","nodes","initialNodes","setNodes","edges","initialEdges","setEdges","onNodeClick","_s","reactFlowWrapper","reactFlowInstance","setReactFlowInstance","internalSetNodes","onNodesChange","internalSetEdges","onEdgesChange","onConnect","params","eds","onDragOver","event","preventDefault","dataTransfer","dropEffect","onDrop","current","reactFlowBounds","getBoundingClientRect","type","getData","position","project","x","clientX","left","y","clientY","top","newNode","id","Date","now","data","text","nds","concat","handleNodeClick","node","className","ref","style","width","height","children","onInit","fitView","attributionPosition","fileName","_jsxFileName","lineNumber","columnNumber","variant","gap","size","_c","$RefreshReg$"],"sources":["C:/Users/singh/OneDrive/Desktop/ChatBot_Flow/src/components/FlowBuilder.js"],"sourcesContent":["import React, { useCallback, useRef, useState, useEffect } from 'react';\r\nimport ReactFlow, {\r\n  useNodesState,\r\n  useEdgesState,\r\n  addEdge,\r\n  applyNodeChanges,\r\n  applyEdgeChanges,\r\n  Background,\r\n  Controls,\r\n  MiniMap,\r\n} from 'reactflow';\r\nimport 'reactflow/dist/style.css';\r\nimport TextNode from './TextNode';\r\nimport './FlowBuilder.css';\r\n\r\nconst nodeTypes = {\r\n  textMessage: TextNode,\r\n};\r\n\r\nconst FlowBuilder = ({ nodes: initialNodes, setNodes, edges: initialEdges, setEdges, onNodeClick }) => {\r\n  const reactFlowWrapper = useRef(null);\r\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n\r\n  // Internal state using React Flow hooks\r\n  const [nodes, internalSetNodes, onNodesChange] = useNodesState(initialNodes || []);\r\n  const [edges, internalSetEdges, onEdgesChange] = useEdgesState(initialEdges || []);\r\n\r\n  // Sync internal state with parent\r\n  useEffect(() => {\r\n    setNodes(nodes);\r\n    setEdges(edges);\r\n  }, [nodes, edges, setNodes, setEdges]);\r\n\r\n  // Handle node connection\r\n  const onConnect = useCallback(\r\n    (params) => internalSetEdges((eds) => addEdge(params, eds)),\r\n    [internalSetEdges]\r\n  );\r\n\r\n  // Drag over behavior\r\n  const onDragOver = useCallback((event) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = 'move';\r\n  }, []);\r\n\r\n  // Handle node drop\r\n  const onDrop = useCallback(\r\n    (event) => {\r\n      event.preventDefault();\r\n      if (!reactFlowWrapper.current || !reactFlowInstance) return;\r\n\r\n      const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n      const type = event.dataTransfer.getData('application/reactflow');\r\n\r\n      if (!type) return;\r\n\r\n      const position = reactFlowInstance.project({\r\n        x: event.clientX - reactFlowBounds.left,\r\n        y: event.clientY - reactFlowBounds.top,\r\n      });\r\n\r\n      const newNode = {\r\n        id: `${type}-${Date.now()}`,\r\n        type,\r\n        position,\r\n        data: { text: 'New text message' },\r\n      };\r\n\r\n      internalSetNodes((nds) => nds.concat(newNode));\r\n    },\r\n    [reactFlowInstance, internalSetNodes]\r\n  );\r\n\r\n  // Handle node click\r\n  const handleNodeClick = useCallback(\r\n    (event, node) => {\r\n      if (onNodeClick && node?.id) onNodeClick(node.id);\r\n    },\r\n    [onNodeClick]\r\n  );\r\n\r\n  return (\r\n    <div className=\"flow-builder\" ref={reactFlowWrapper} style={{ width: '100%', height: '100%' }}>\r\n      <ReactFlow\r\n        nodes={nodes}\r\n        edges={edges}\r\n        onNodesChange={onNodesChange}\r\n        onEdgesChange={onEdgesChange}\r\n        onConnect={onConnect}\r\n        onInit={setReactFlowInstance}\r\n        onDrop={onDrop}\r\n        onDragOver={onDragOver}\r\n        onNodeClick={handleNodeClick}\r\n        nodeTypes={nodeTypes}\r\n        fitView\r\n        attributionPosition=\"top-right\"\r\n      >\r\n        <Controls />\r\n        <MiniMap />\r\n        <Background variant=\"dots\" gap={12} size={1} />\r\n      </ReactFlow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlowBuilder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}