{"ast":null,"code":"import React,{useCallback,useRef,useState}from'react';import ReactFlow,{useNodesState,useEdgesState,addEdge,Background,Controls,MiniMap}from'reactflow';import'reactflow/dist/style.css';import TextNode from'./TextNode';import'./FlowBuilder.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const nodeTypes={textMessage:TextNode};const FlowBuilder=_ref=>{let{nodes,setNodes,edges,setEdges,onNodeClick}=_ref;const reactFlowWrapper=useRef(null);const[reactFlowInstance,setReactFlowInstance]=useState(null);const onConnect=useCallback(params=>setEdges(eds=>addEdge(params,eds)),[setEdges]);const onDragOver=useCallback(event=>{event.preventDefault();event.dataTransfer.dropEffect='move';},[]);const onDrop=useCallback(event=>{event.preventDefault();const reactFlowBounds=reactFlowWrapper.current.getBoundingClientRect();const type=event.dataTransfer.getData('application/reactflow');if(typeof type==='undefined'||!type){return;}const position=reactFlowInstance.project({x:event.clientX-reactFlowBounds.left,y:event.clientY-reactFlowBounds.top});const newNode={id:\"\".concat(type,\"-\").concat(Date.now()),type,position,data:{text:'New text message'}};setNodes(nds=>nds.concat(newNode));},[reactFlowInstance,setNodes]);const handleNodeClick=useCallback((event,node)=>{onNodeClick(node.id);},[onNodeClick]);return/*#__PURE__*/_jsx(\"div\",{className:\"flow-builder\",ref:reactFlowWrapper,children:/*#__PURE__*/_jsxs(ReactFlow,{nodes:nodes,edges:edges,onNodesChange:setNodes,onEdgesChange:setEdges,onConnect:onConnect,onInit:setReactFlowInstance,onDrop:onDrop,onDragOver:onDragOver,onNodeClick:handleNodeClick,nodeTypes:nodeTypes,fitView:true,attributionPosition:\"top-right\",children:[/*#__PURE__*/_jsx(Controls,{}),/*#__PURE__*/_jsx(MiniMap,{}),/*#__PURE__*/_jsx(Background,{variant:\"dots\",gap:12,size:1})]})});};export default FlowBuilder;","map":{"version":3,"names":["React","useCallback","useRef","useState","ReactFlow","useNodesState","useEdgesState","addEdge","Background","Controls","MiniMap","TextNode","jsx","_jsx","jsxs","_jsxs","nodeTypes","textMessage","FlowBuilder","_ref","nodes","setNodes","edges","setEdges","onNodeClick","reactFlowWrapper","reactFlowInstance","setReactFlowInstance","onConnect","params","eds","onDragOver","event","preventDefault","dataTransfer","dropEffect","onDrop","reactFlowBounds","current","getBoundingClientRect","type","getData","position","project","x","clientX","left","y","clientY","top","newNode","id","concat","Date","now","data","text","nds","handleNodeClick","node","className","ref","children","onNodesChange","onEdgesChange","onInit","fitView","attributionPosition","variant","gap","size"],"sources":["C:/Users/singh/OneDrive/Desktop/ChatBot_Flow/src/components/FlowBuilder.js"],"sourcesContent":["import React , {useCallback , useRef , useState } from 'react';\r\nimport ReactFlow , {\r\n  useNodesState,\r\n  useEdgesState,\r\n  addEdge,\r\n  Background,\r\n  Controls,\r\n  MiniMap,\r\n} from 'reactflow';\r\nimport 'reactflow/dist/style.css';\r\nimport TextNode from './TextNode';\r\nimport './FlowBuilder.css';\r\n\r\n\r\nconst nodeTypes = {\r\n  textMessage: TextNode,\r\n};\r\n\r\nconst FlowBuilder = ({\r\n  nodes,setNodes,edges,setEdges,onNodeClick\r\n}) => {\r\n  const reactFlowWrapper = useRef(null);\r\n  const [reactFlowInstance , setReactFlowInstance] = useState(null);\r\n\r\n const onConnect = useCallback(\r\n  (params) => setEdges((eds) => addEdge(params,eds)),\r\n  [setEdges]\r\n );\r\n\r\n const onDragOver = useCallback((event) =>{\r\n  event.preventDefault();\r\n  event.dataTransfer.dropEffect = 'move';\r\n },[]);\r\n\r\n const onDrop = useCallback(\r\n    (event) => {\r\n      event.preventDefault();\r\n      const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n      const type = event.dataTransfer.getData('application/reactflow');\r\n\r\n      if(typeof type === 'undefined' || !type){\r\n        return;\r\n      }\r\n\r\n      const position = reactFlowInstance.project({\r\n        x : event.clientX - reactFlowBounds.left,\r\n        y : event.clientY - reactFlowBounds.top,\r\n      });\r\n\r\n      const newNode = {\r\n        id: `${type}-${Date.now()}`,\r\n        type,\r\n        position,\r\n        data: {text: 'New text message'},\r\n      };\r\n\r\n      setNodes((nds) => nds.concat(newNode));\r\n    },\r\n    [reactFlowInstance,setNodes]\r\n  );\r\n\r\nconst handleNodeClick = useCallback((event, node) =>{\r\n  onNodeClick(node.id);\r\n},[onNodeClick]);\r\n\r\nreturn (\r\n  <div className='flow-builder' ref={reactFlowWrapper}>\r\n    <ReactFlow \r\n     nodes = {nodes}\r\n     edges = {edges}\r\n     onNodesChange = {setNodes}\r\n     onEdgesChange = {setEdges}\r\n     onConnect = {onConnect}\r\n     onInit = {setReactFlowInstance}\r\n     onDrop = {onDrop}\r\n     onDragOver = {onDragOver}\r\n     onNodeClick = {handleNodeClick}\r\n     nodeTypes = {nodeTypes}\r\n     fitView\r\n     attributionPosition = \"top-right\"\r\n     >\r\n    <Controls/>\r\n    <MiniMap/>\r\n    <Background variant=\"dots\" gap={12} size={1} />\r\n    </ReactFlow> \r\n  </div>\r\n);\r\n \r\n};\r\n\r\nexport default FlowBuilder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}