{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singh\\\\OneDrive\\\\Desktop\\\\ChatBot_Flow\\\\src\\\\components\\\\FlowBuilder.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useRef, useState } from 'react';\nimport ReactFlow, { useNodesState, useEdgesState, addEdge, Background, Controls, MiniMap } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport TextNode from './TextNode';\nimport './FlowBuilder.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  textMessage: TextNode\n};\nconst FlowBuilder = ({\n  nodes,\n  setNodes,\n  edges,\n  setEdges,\n  onNodeClick\n}) => {\n  _s();\n  const reactFlowWrapper = useRef(null);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n  const onDragOver = useCallback(event => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n  const onDrop = useCallback(event => {\n    event.preventDefault();\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const type = event.dataTransfer.getData('application/reactflow');\n    if (typeof type === 'undefined' || !type) {\n      return;\n    }\n    const position = reactFlowInstance.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top\n    });\n    const newNode = {\n      id: `${type}-${Date.now()}`,\n      type,\n      position,\n      data: {\n        text: 'New text message'\n      }\n    };\n    setNodes(nds => nds.concat(newNode));\n  }, [reactFlowInstance, setNodes]);\n  const handleNodeClick = useCallback((event, node) => {\n    onNodeClick(node.id);\n  }, [onNodeClick]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flow-builder\",\n    ref: reactFlowWrapper,\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: setNodes,\n      onEdgesChange: setEdges,\n      onConnect: onConnect,\n      onInit: setReactFlowInstance,\n      onDrop: onDrop,\n      onDragOver: onDragOver,\n      onNodeClick: handleNodeClick,\n      nodeTypes: nodeTypes,\n      fitView: true,\n      attributionPosition: \"top-right\",\n      children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Background, {\n        variant: \"dots\",\n        gap: 12,\n        size: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 3\n  }, this);\n};\n_s(FlowBuilder, \"W2yr0HaWv5RSYFigOc+hrB2ytvM=\");\n_c = FlowBuilder;\nexport default FlowBuilder;\nvar _c;\n$RefreshReg$(_c, \"FlowBuilder\");","map":{"version":3,"names":["React","useCallback","useRef","useState","ReactFlow","useNodesState","useEdgesState","addEdge","Background","Controls","MiniMap","TextNode","jsxDEV","_jsxDEV","nodeTypes","textMessage","FlowBuilder","nodes","setNodes","edges","setEdges","onNodeClick","_s","reactFlowWrapper","reactFlowInstance","setReactFlowInstance","onConnect","params","eds","onDragOver","event","preventDefault","dataTransfer","dropEffect","onDrop","reactFlowBounds","current","getBoundingClientRect","type","getData","position","project","x","clientX","left","y","clientY","top","newNode","id","Date","now","data","text","nds","concat","handleNodeClick","node","className","ref","children","onNodesChange","onEdgesChange","onInit","fitView","attributionPosition","fileName","_jsxFileName","lineNumber","columnNumber","variant","gap","size","_c","$RefreshReg$"],"sources":["C:/Users/singh/OneDrive/Desktop/ChatBot_Flow/src/components/FlowBuilder.js"],"sourcesContent":["import React , {useCallback , useRef , useState } from 'react';\r\nimport ReactFlow , {\r\n  useNodesState,\r\n  useEdgesState,\r\n  addEdge,\r\n  Background,\r\n  Controls,\r\n  MiniMap,\r\n} from 'reactflow';\r\nimport 'reactflow/dist/style.css';\r\nimport TextNode from './TextNode';\r\nimport './FlowBuilder.css';\r\n\r\n\r\nconst nodeTypes = {\r\n  textMessage: TextNode,\r\n};\r\n\r\nconst FlowBuilder = ({\r\n  nodes,setNodes,edges,setEdges,onNodeClick\r\n}) => {\r\n  const reactFlowWrapper = useRef(null);\r\n  const [reactFlowInstance , setReactFlowInstance] = useState(null);\r\n\r\n const onConnect = useCallback(\r\n  (params) => setEdges((eds) => addEdge(params,eds)),\r\n  [setEdges]\r\n );\r\n\r\n const onDragOver = useCallback((event) =>{\r\n  event.preventDefault();\r\n  event.dataTransfer.dropEffect = 'move';\r\n },[]);\r\n\r\n const onDrop = useCallback(\r\n    (event) => {\r\n      event.preventDefault();\r\n      const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n      const type = event.dataTransfer.getData('application/reactflow');\r\n\r\n      if(typeof type === 'undefined' || !type){\r\n        return;\r\n      }\r\n\r\n      const position = reactFlowInstance.project({\r\n        x : event.clientX - reactFlowBounds.left,\r\n        y : event.clientY - reactFlowBounds.top,\r\n      });\r\n\r\n      const newNode = {\r\n        id: `${type}-${Date.now()}`,\r\n        type,\r\n        position,\r\n        data: {text: 'New text message'},\r\n      };\r\n\r\n      setNodes((nds) => nds.concat(newNode));\r\n    },\r\n    [reactFlowInstance,setNodes]\r\n  );\r\n\r\nconst handleNodeClick = useCallback((event, node) =>{\r\n  onNodeClick(node.id);\r\n},[onNodeClick]);\r\n\r\nreturn (\r\n  <div className='flow-builder' ref={reactFlowWrapper}>\r\n    <ReactFlow \r\n     nodes = {nodes}\r\n     edges = {edges}\r\n     onNodesChange = {setNodes}\r\n     onEdgesChange = {setEdges}\r\n     onConnect = {onConnect}\r\n     onInit = {setReactFlowInstance}\r\n     onDrop = {onDrop}\r\n     onDragOver = {onDragOver}\r\n     onNodeClick = {handleNodeClick}\r\n     nodeTypes = {nodeTypes}\r\n     fitView\r\n     attributionPosition = \"top-right\"\r\n     >\r\n    <Controls/>\r\n    <MiniMap/>\r\n    <Background variant=\"dots\" gap={12} size={1} />\r\n    </ReactFlow> \r\n  </div>\r\n);\r\n \r\n};\r\n\r\nexport default FlowBuilder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}