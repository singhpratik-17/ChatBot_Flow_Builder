{"ast":null,"code":"import React,{useCallback,useRef,useState,useEffect}from'react';import ReactFlow,{useNodesState,useEdgesState,addEdge,applyNodeChanges,applyEdgeChanges,Background,Controls,MiniMap}from'reactflow';import'reactflow/dist/style.css';import TextNode from'./TextNode';import'./FlowBuilder.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const nodeTypes={textMessage:TextNode};const FlowBuilder=_ref=>{let{nodes:initialNodes,setNodes,edges:initialEdges,setEdges,onNodeClick}=_ref;const reactFlowWrapper=useRef(null);const[reactFlowInstance,setReactFlowInstance]=useState(null);// Internal state using React Flow hooks\nconst[nodes,internalSetNodes,onNodesChange]=useNodesState(initialNodes||[]);const[edges,internalSetEdges,onEdgesChange]=useEdgesState(initialEdges||[]);// Sync internal state with parent\nuseEffect(()=>{setNodes(nodes);setEdges(edges);},[nodes,edges,setNodes,setEdges]);// Handle node connection\nconst onConnect=useCallback(params=>internalSetEdges(eds=>addEdge(params,eds)),[internalSetEdges]);// Drag over behavior\nconst onDragOver=useCallback(event=>{event.preventDefault();event.dataTransfer.dropEffect='move';},[]);// Handle node drop\nconst onDrop=useCallback(event=>{event.preventDefault();if(!reactFlowWrapper.current||!reactFlowInstance)return;const reactFlowBounds=reactFlowWrapper.current.getBoundingClientRect();const type=event.dataTransfer.getData('application/reactflow');if(!type)return;const position=reactFlowInstance.project({x:event.clientX-reactFlowBounds.left,y:event.clientY-reactFlowBounds.top});const newNode={id:\"\".concat(type,\"-\").concat(Date.now()),type,position,data:{text:'New text message'}};internalSetNodes(nds=>nds.concat(newNode));},[reactFlowInstance,internalSetNodes]);// Handle node click\nconst handleNodeClick=useCallback((event,node)=>{if(onNodeClick&&node!==null&&node!==void 0&&node.id)onNodeClick(node.id);},[onNodeClick]);return/*#__PURE__*/_jsx(\"div\",{className:\"flow-builder\",ref:reactFlowWrapper,style:{width:'100%',height:'100%'},children:/*#__PURE__*/_jsxs(ReactFlow,{nodes:nodes,edges:edges,onNodesChange:onNodesChange,onEdgesChange:onEdgesChange,onConnect:onConnect,onInit:setReactFlowInstance,onDrop:onDrop,onDragOver:onDragOver,onNodeClick:handleNodeClick,nodeTypes:nodeTypes,fitView:true,attributionPosition:\"top-right\",children:[/*#__PURE__*/_jsx(Controls,{}),/*#__PURE__*/_jsx(MiniMap,{}),/*#__PURE__*/_jsx(Background,{variant:\"dots\",gap:12,size:1})]})});};export default FlowBuilder;","map":{"version":3,"names":["React","useCallback","useRef","useState","useEffect","ReactFlow","useNodesState","useEdgesState","addEdge","applyNodeChanges","applyEdgeChanges","Background","Controls","MiniMap","TextNode","jsx","_jsx","jsxs","_jsxs","nodeTypes","textMessage","FlowBuilder","_ref","nodes","initialNodes","setNodes","edges","initialEdges","setEdges","onNodeClick","reactFlowWrapper","reactFlowInstance","setReactFlowInstance","internalSetNodes","onNodesChange","internalSetEdges","onEdgesChange","onConnect","params","eds","onDragOver","event","preventDefault","dataTransfer","dropEffect","onDrop","current","reactFlowBounds","getBoundingClientRect","type","getData","position","project","x","clientX","left","y","clientY","top","newNode","id","concat","Date","now","data","text","nds","handleNodeClick","node","className","ref","style","width","height","children","onInit","fitView","attributionPosition","variant","gap","size"],"sources":["C:/Users/singh/OneDrive/Desktop/ChatBot_Flow/src/components/FlowBuilder.js"],"sourcesContent":["import React, { useCallback, useRef, useState, useEffect } from 'react';\r\nimport ReactFlow, {\r\n  useNodesState,\r\n  useEdgesState,\r\n  addEdge,\r\n  applyNodeChanges,\r\n  applyEdgeChanges,\r\n  Background,\r\n  Controls,\r\n  MiniMap,\r\n} from 'reactflow';\r\nimport 'reactflow/dist/style.css';\r\nimport TextNode from './TextNode';\r\nimport './FlowBuilder.css';\r\n\r\nconst nodeTypes = {\r\n  textMessage: TextNode,\r\n};\r\n\r\nconst FlowBuilder = ({ nodes: initialNodes, setNodes, edges: initialEdges, setEdges, onNodeClick }) => {\r\n  const reactFlowWrapper = useRef(null);\r\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n\r\n  // Internal state using React Flow hooks\r\n  const [nodes, internalSetNodes, onNodesChange] = useNodesState(initialNodes || []);\r\n  const [edges, internalSetEdges, onEdgesChange] = useEdgesState(initialEdges || []);\r\n\r\n  // Sync internal state with parent\r\n  useEffect(() => {\r\n    setNodes(nodes);\r\n    setEdges(edges);\r\n  }, [nodes, edges, setNodes, setEdges]);\r\n\r\n  // Handle node connection\r\n  const onConnect = useCallback(\r\n    (params) => internalSetEdges((eds) => addEdge(params, eds)),\r\n    [internalSetEdges]\r\n  );\r\n\r\n  // Drag over behavior\r\n  const onDragOver = useCallback((event) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = 'move';\r\n  }, []);\r\n\r\n  // Handle node drop\r\n  const onDrop = useCallback(\r\n    (event) => {\r\n      event.preventDefault();\r\n      if (!reactFlowWrapper.current || !reactFlowInstance) return;\r\n\r\n      const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n      const type = event.dataTransfer.getData('application/reactflow');\r\n\r\n      if (!type) return;\r\n\r\n      const position = reactFlowInstance.project({\r\n        x: event.clientX - reactFlowBounds.left,\r\n        y: event.clientY - reactFlowBounds.top,\r\n      });\r\n\r\n      const newNode = {\r\n        id: `${type}-${Date.now()}`,\r\n        type,\r\n        position,\r\n        data: { text: 'New text message' },\r\n      };\r\n\r\n      internalSetNodes((nds) => nds.concat(newNode));\r\n    },\r\n    [reactFlowInstance, internalSetNodes]\r\n  );\r\n\r\n  // Handle node click\r\n  const handleNodeClick = useCallback(\r\n    (event, node) => {\r\n      if (onNodeClick && node?.id) onNodeClick(node.id);\r\n    },\r\n    [onNodeClick]\r\n  );\r\n\r\n  return (\r\n    <div className=\"flow-builder\" ref={reactFlowWrapper} style={{ width: '100%', height: '100%' }}>\r\n      <ReactFlow\r\n        nodes={nodes}\r\n        edges={edges}\r\n        onNodesChange={onNodesChange}\r\n        onEdgesChange={onEdgesChange}\r\n        onConnect={onConnect}\r\n        onInit={setReactFlowInstance}\r\n        onDrop={onDrop}\r\n        onDragOver={onDragOver}\r\n        onNodeClick={handleNodeClick}\r\n        nodeTypes={nodeTypes}\r\n        fitView\r\n        attributionPosition=\"top-right\"\r\n      >\r\n        <Controls />\r\n        <MiniMap />\r\n        <Background variant=\"dots\" gap={12} size={1} />\r\n      </ReactFlow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlowBuilder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}